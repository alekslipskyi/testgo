---

swagger: '2.0'
info:
  title: "Test Go"
  version: 0.3.0
schemes:
  - http
basePath: /api/v0
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /auth/token:
    get:
      tags: ["Auth"]
      operationId: retrieveToken
      summary: Create test user
      parameters:
        - name: username
          type: string
          in: query
          default: string
        - name: password
          type: string
          in: query
          default: string
      responses:
        '200':
          description: created
          schema:
            $ref: "#/definitions/auth"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /list:
    get:
      tags: ["List"]
      security:
        - Bearer: []
      summary: get lists
      responses:
        '200':
          description: list
          schema:
            $ref: "#/definitions/list"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    post:
      tags: ["List"]
      security:
        - Bearer: []
      summary: create list
      parameters:
        - name: info
          in: body
          schema:
            $ref: "#/definitions/listToCreate"
      responses:
        '200':
          description: list
          schema:
            $ref: "#/definitions/list"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /list/{id}:
    get:
      tags: ["List"]
      security:
        - Bearer: []
      summary: get list by id
      parameters:
        - name: id
          in: path
          schema:
            type: number
      responses:
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    patch:
      tags: ["List"]
      security:
        - Bearer: []
      summary: update list by id
      parameters:
        - name: id
          in: path
          schema:
            type: number
        - name: info
          in: body
          schema:
            $ref: "#/definitions/listToCreate"
      responses:
        '200':
          description: list
          schema:
            $ref: "#/definitions/list"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: ["List"]
      security:
        - Bearer: []
      summary: delete list by id
      parameters:
        - name: id
          in: path
          schema:
            type: number
      responses:
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /user:
    post:
      tags: ["User"]
      operationId: create
      summary: Create test user
      parameters:
        - name: info
          in: body
          schema:
            $ref: "#/definitions/userToCreate"
      responses:
        '200':
          description: created
          schema:
            $ref: "#/definitions/myUserData"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    put:
      tags: ["User"]
      security:
        - Bearer: []
      operationId: update
      summary: Update user
      parameters:
        - name: info
          in: body
          schema:
            $ref: "#/definitions/userToUpdate"
      responses:
        '200':
          description: updated
          schema:
            $ref: "#/definitions/myUserData"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: ["User"]
      security:
        - Bearer: []
      operationId: delete
      summary: Delete user
      responses:
        '200':
          description: ok
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: ["User"]
      operationId: get
      summary: get me
      security:
        - Bearer: []
      responses:
        '200':
          description: updated
          schema:
            $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /user/{id}:
    get:
      tags: ["User"]
      operationId: get
      summary: get user by id
      parameters:
        - name: id
          in: path
          schema:
            type: number
      responses:
        '200':
          description: updated
          schema:
            $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /message/{channelID}/messages:
    get:
      tags: ["Messages"]
      security:
        - Bearer: []
      parameters:
        - name: channelID
          in: path
          schema:
            type: number
      operationId: get
      summary: get all messages related to provided channel id from param channelID
      responses:
        '200':
          schema:
            $ref: "#/definitions/channel"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /channel:
    get:
      tags: ["Channel"]
      security:
        - Bearer: []
      operationId: get
      summary: get all channels
      responses:
        '200':
          schema:
            $ref: "#/definitions/channel"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    post:
      tags: ["Channel"]
      security:
        - Bearer: []
      operationId: create
      summary: create channel
      parameters:
        - name: info
          in: body
          schema:
            $ref: "#/definitions/channelToCreate"
      responses:
        '200':
          description: ok
          schema:
            $ref: "#/definitions/channel"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /channel/{userID}/invite/{channelID}:
    put:
      tags: ["Channel"]
      security:
        - Bearer: []
      operationId: invite
      parameters:
        - name: userID
          in: path
          schema:
            type: number
        - name: channelID
          in: path
          schema:
            type: number
      summary: invite user to channel
      responses:
        '200':
          schema:
            $ref: "#/definitions/channels"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /channel/{channelID}:
    delete:
      tags: ["Channel"]
      security:
        - Bearer: []
      operationId: channel_drop
      parameters:
        - name: channelID
          in: path
          schema:
            type: number
      summary: drop the channel
      responses:
        200:
          description: ok
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
definitions:
  userToCreate:
    type: object
    required:
      - username
      - password
      - firstName
      - lastName
    properties:
      username:
        type: string
        format: string
      password:
        type: string
        format: string
        minLength: 1
      firstName:
        type: string
        format: string
        minLength: 1
      lastName:
        type: string
        format: string
        minLength: 1
  myUserData:
    properties:
      username:
        type: string
        format: string
      ID:
        type: number
        format: number
      firstName:
        type: string
        format: string
        minLength: 1
      lastName:
        type: string
        format: string
        minLength: 1
  user:
    type: object
    properties:
      username:
        type: string
        format: string
      firstName:
        type: string
        format: string
        minLength: 1
      lastName:
        type: string
        format: string
        minLength: 1
  channelToCreate:
    type: object
    properties:
      name:
        type: string
        format: string
  userToUpdate:
    type: object
    properties:
      username:
        type: string
        format: string
      firstName:
        type: string
        format: string
        minLength: 1
      lastName:
        type: string
        format: string
        minLength: 1
  list:
    type: object
    properties:
      title:
        type: string
        format: string
      description:
        type: string
        format: string
        minLength: 1
      createdAt:
        type: string
        format: string
  channel:
    type: object
    properties:
      id:
        type: number
        format: number
      name:
        type: string
        format: string
      user_ids:
        type: array
        items:
          type: number
          format: number
  channels:
    type: array
    items:
      $ref: "#/definitions/channel"
  listToCreate:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
  auth:
    allOf:
      - $ref: "#/definitions/myUserData"
      - type: object
        properties:
          token:
            type: string
            format: string
  social_id:
    type: object
    required:
      - ssn
    properties:
      ssn:
        type: string
        format: string
        minLength: 11
  error:
    type: object
    properties:
      StatusCode:
        type: integer
        format: int64
      Message:
        type: string
      Token:
        type: string
  principal:
    type: string